Here, the intention was to get the basic understanding of Ethernet PHY and the mac.
Need to understand the following terms:
MAC - Media access controller
MDIO - Management Data Input/Output
 + The Management Data Input/Output (MDIO) Serial Management Interface (SMI) is used to transfer management information between MAC and PHY. At powerup the PHY usually adapts to whatever it is connected to (autonegotiation) unless settings are altered via the MDIO interface.
 + Management Data Input/Output (MDIO), also known as Serial Management Interface (SMI) or Media Independent Interface Management (MIIM), is a serial bus defined for the Ethernet family of IEEE 802.3 standards for the Media Independent Interface, or MII. The MII connects Media Access Control (MAC) devices with Ethernet physical layer (PHY) circuits. The MAC device controlling the MDIO is called the Station Management Entity (SME).

MII - Media Independent Interface
	The media-independent interface (MII) was originally defined as a standard interface used to connect a Fast Ethernet (i.e., 100 Mbit/s) media access control (MAC) block to a PHY chip. The MII design has been extended to support reduced signals and increased speeds. Current variants are reduced media-independent interface, gigabit media-independent interface, reduced gigabit media-independent interface, serial gigabit media-independent interface (SGMII), 10-gigabit media-independent interface, XAUI, GBIC, SFP, SFI, XFP, and XFI. The equivalent of MII for 10-megabit Ethernet is the attachment unit interface (AUI).

Being media independent means that different types of PHY devices for connecting to different media (i.e. Twisted pair copper, fiber optic, etc.) can be used without redesigning or replacing the MAC hardware. The MII bus (standardized by IEEE 802.3u) connects different types of PHYs (physical transceivers) to media access controllers (MAC). Thus any MAC may be used with any PHY, independent of the network signal transmission media. The MII bus transfers data using 4-bit words (nibble) in each direction (4 transmit data bits, 4 receive data bits). The data is clocked at 25 MHz to achieve 100 Mbit/s speed.

Transmitter signals

    TX_CLK Transmit clock (PHY to MAC)
    TXD0 Transmit data bit 0 (MAC to PHY) (transmitted first)
    TXD1 Transmit data bit 1 (MAC to PHY)
    TXD2 Transmit data bit 2 (MAC to PHY)
    TXD3 Transmit data bit 3 (MAC to PHY)
    TX_EN Transmit enable (MAC to PHY)
    TX_ER Transmit error (MAC to PHY, optional)

The transmit clock is a free-running clock generated by the PHY based on the link speed (25 MHz for 100 Mbit/s, 2.5 MHz for 10 Mbit/s). The remaining transmit signals are driven by the MAC synchronously on the rising edge of TX_CLK. This arrangement allows the MAC to operate without having to be aware of the link speed. The transmit enable signal is held high during frame transmission and low when the transmitter is idle.

Transmit error may be raised for one or more clock periods during frame transmission to request the PHY to deliberately corrupt the frame in some visible way that precludes it from being received as valid. This may be used to abort a frame when some problem is detected after transmission has already started. The MAC may omit the signal if it has no use for this functionality, in which case the signal should be tied low for the PHY.

More recently, raising transmit error outside frame transmission is used to indicate the transmit data lines are being used for special-purpose signalling. Specifically, the data value 0b0001 (held continuously with TX_EN low and TX_ER high) is used to request an EEE-capable PHY to enter low power mode.


    RX_CLK Receive clock (PHY to MAC)
    RXD0 Receive data bit 0 (PHY to MAC) (received first)
    RXD1 Receive data bit 1 (PHY to MAC)
    RXD2 Receive data bit 2 (PHY to MAC)
    RXD3 Receive data bit 3 (PHY to MAC)
    RX_DV Receive data valid (PHY to MAC)
    RX_ER Receive error (PHY to MAC)
    CRS Carrier sense (PHY to MAC)
    COL Collision detect (PHY to MAC)

The first seven receiver signals are entirely analogous to the transmitter signals, except RX_ER is not optional and used to indicate the received signal could not be decoded to valid data. The receive clock is recovered from the incoming signal during frame reception. When no clock can be recovered (i.e. when the medium is silent), the PHY must present a free-running clock as a substitute.

The receive data valid signal (RX_DV) is not required to go high immediately when the frame starts, but must do so in time to ensure the "start of frame delimiter" byte is included in the received data. Some of the preamble nibbles may be lost.

Similar to transmit, raising RX_ER outside a frame is used for special signalling. For receive, two data values are defined: 0b0001 to indicate the link partner is in EEE low power mode, and 0b1110 for a "false carrier" indication.

The CRS and COL signals are asynchronous to the receive clock, and are only meaningful in half-duplex mode. Carrier sense is high when transmitting, receiving, or the medium is otherwise sensed as being in use. If a collision is detected, COL also goes high while the collision persists.

In addition, the MAC may weakly pull-up the COL signal, allowing the combination of COL high with CRS low (which a PHY will never produce) to serve as indication of an absent/disconnected PHY.


RMII - Reduced Media Independent Interface
Reduced media-independent interface

Reduced media-independent interface (RMII) is a standard which was developed to reduce the number of signals required to connect a PHY to a MAC. Four things were changed compared to the MII standard to achieve this:

    The two clocks TXCLK and RXCLK are replaced by a single clock. This clock is an input to the PHY rather than an output, which allows the clock signal to be shared among all PHYs in a multiport device, such as a switch.
    The clock frequency is doubled from 25 MHz to 50 MHz, while the data paths are narrowed to 2 bits rather than 4 bits.
    RXDV and CRS signals are multiplexed to one signal.
    The COL signal is removed.

These changes mean that RMII uses about half the number of signals compared to MII. The high pin count of MII is more of a burden on microcontrollers with built-in MAC, FPGAs, multiport switches or repeaters, and PC motherboard chipsets than it is for a separate single-port Ethernet MAC, which partially explains why the older MII standard was more wasteful of pins.
RMII transmitter signals

    TXD0 Transmit data bit 0 (MAC to PHY) (transmitted first)
    TXD1 Transmit data bit 1 (MAC to PHY)
    TX_EN When high, clock data on TXD0 and TXD1 to the transmitter (MAC to PHY)

RMII receiver signals

    RXD0 Receive data bit 0 (PHY to MAC) (received first)
    RXD1 Receive data bit 1 (PHY to MAC)
    CRS_DV, Carrier Sense (CRS)/RX_Data Valid(RX_DV) multiplexed on alternate clock cycles. In 10 Mbit/s mode, it alternates every 10 clock cycles. (PHY to MAC)
    RX_ER Receive Error (optional on switches) (PHY to MAC)

The receiver signals are referenced to the REF_CLK, same as the transmitter signals.
RMII transmitter/receiver signals

    REF_CLK Continuous 50 MHz Reference Clock (may be shared among interfaces). Reference clock may be an input on both devices from an external clock source, or may be driven from the MAC to the PHY.

RMII management signals

    MDIO Management data I/O line (bidirectional, push-pull)
    MDC Management data clock line (unidirectional: MAC to PHY). MDC and MDIO can be shared among multiple PHYs.

GMII interface
 + It consists of following signals:
   Gigabit media-independent Interface (GMII) is an interface between the Media Access Control (MAC) device and the physical layer (PHY). The interface defines speeds up to 1000 Mbit/s, implemented using a data interface clocked at 125 MHz with separate eight-bit data paths for receive and transmit, and is backwards compatible with the media-independent interface (MII) specification. It can also operate on fall-back speeds of 10 or 100 Mbit/s as per the MII specification.

Data on the interface is framed using the IEEE Ethernet standard. As such it consists of a preamble, start frame delimiter, Ethernet headers, protocol specific data and a cyclic redundancy check (CRC).

The GMII interface is defined in IEEE Standard 802.3, 2000 Edition.[5]
Transmitter signals

    GTXCLK – clock signal for gigabit TX signals (125 MHz)
    TXCLK – clock signal for 10/100 Mbit/s signals
    TXD[7..0] – data to be transmitted
    TXEN – transmitter enable
    TXER – transmitter error (used to corrupt a packet)

There are two clocks, depending on whether the PHY is operating at gigabit or 10/100 Mbit/s speeds. For gigabit speeds, the GTXCLK is supplied to the PHY and the TXD, TXEN, TXER signals are synchronized to this. Otherwise for 10 or 100 Mbit/s the TXCLK (supplied by PHY) is used for synchronizing those signals. This operates at either 25 MHz for 100 Mbit/s or 2.5 MHz for 10 Mbit/s connections. The receiver clock is much simpler, with only one clock, which is recovered from the incoming data. Hence the GTXCLK and RXCLK are not coherent.
Receiver signals

    RXCLK – received clock signal (recovered from incoming received data)
    RXD[7..0] – received data
    RXDV – signifies data received is valid
    RXER – signifies data received has errors
    COL – collision detect (half-duplex connections only)
    CS – carrier sense (half-duplex connections only)

Management signals

    MDC – management interface clock
    MDIO – management interface I/O bidirectional pin.

The management interface controls the behavior of the PHY. There are 32 addresses, each containing 16 bits. The first 16 addresses have a defined usage,[6] while the others are device specific. These registers can be used to configure the device (say "only gigabit, full duplex", or "only full duplex") or can be used to determine the current operating mode.
Reduced gigabit media-independent interface
Supported Ethernet speeds [Mbit/s] 	[MHz] 	Bits/clock cycle
10 	2.5 	4
100 	25  	4
1000 	125  	8

Reduced gigabit media-independent interface (RGMII) specifies a particular interface between an Ethernet MAC and PHY.

RGMII uses half the number of data pins as used in the GMII interface. This reduction is achieved by clocking data on both the rising and falling edges of the clock in 1000 Mbit/s operation, and by eliminating non-essential signals (carrier-sense and collision-indication). Thus RGMII consists only of: RX_CTL, RXC, RXD[3:0], TX_CTL, TXC, TXD[3:0] (12 pins, as opposed to GMII's 24).

Unlike GMII, the transmit clock signal is always provided by the MAC on the TXC line, rather than being provided by the PHY for 10/100 Mbit/s operation and by the MAC at 1000 Mbit/s. Source-synchronous clocking is used: the clock signal that is output (by either the PHY or the MAC) is synchronous with the data signals. This requires the PCB to be designed to add a 1.5–2 ns delay to the clock signal to make the setup and hold times on the sink. RGMII v2.0 specifies an optional internal delay, obviating the need for the PCB designer to add delay; this is known as RGMII-ID.

To achieve these data-rates, data is clocked on rising and falling edges for 1000 Mbit/s, and on rising edges only for 10/100 Mbit/s.[7] The RX_CTL signal carries RXDV (data valid) on the rising edge, and (RXDV xor RXER) on the falling edge. The TX_CTL signal likewise carries TXEN on rising edge and (TXEN xor TXER) on the falling edge. This is the case for both 1000 Mbit/s and 10/100 Mbit/s.[8]
Transmitter signals

    TXC – clock signal
    TXD[3..0] – data to be transmitted
    TX_CTL – multiplexing of transmitter enable and transmitter error

Receiver signals

    RXC – received clock signal (recovered from incoming received data)
    RXD[3..0] – received data
    RX_CTL – multiplexing of data received is valid and receiver error

Management signals

    MDC – management interface clock
    MDIO – management interface I/O bidirectional pin.

RGMII version 1.3[9] uses 2.5V CMOS,[10] whereas RGMII version 2 uses 1.5V HSTL.[11]
